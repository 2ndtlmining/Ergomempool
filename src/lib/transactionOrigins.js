// ENHANCED src/lib/transactionOrigins.js - Single Source of Truth for Platform Data
export const PLATFORM_CONFIGS = {
  ERGODEX: {
    name: "ErgoDEX",
    logo: "/logos/ergodex.png", 
    color: "#3498db",
    website: "https://app.ergodex.io",
    contractAddresses: [
      // ErgoDEX smart contract addresses - add real addresses here
      "9fdmUutc4DhcqXAAyQeBTsw49PjEM4vuW9riQCHtXAoGEw3R11d",
      "5vSUZRZbdVbnk4sJWjg2uhL94VZWRg4iatK9VgMChufzUgdihgvhR8yWSUEJKszzV7Vmi6K8hCyKTNhUaiP8p5ko6YEU9yfHpjVuXdQ4i5p4cRCzch6ZiqWrNukYjv7Vs5jvBwqg5hcEJ8u1eerr537YLWUoxxi1M4vQxuaCihzPKMt8NDXP4WcbN6mfNxxLZeGBvsHVvVmina5THaECosCWozKJFBnscjhpr3AJsdaL8evXAvPfEjGhVMoTKXAb2ZGGRmR8g1eZshaHmgTg2imSiaoXU5eiF3HvBnDuawaCtt674ikZ3oZdekqswcVPGMwqqUKVsGY4QuFeQoGwRkMqEYTdV2UDMMsfrjrBYQYKUBFMwsQGMNBL1VoY78aotXzdeqJCBVKbQdD3ZZWvukhSe4xrz8tcF3PoxpysDLt89boMqZJtGEHTV9UBTBEac6sDyQP693qT3nKaErN8TCXrJBUmHPqKozAg9bwxTqMYkpmb9iVKLSoJxG7MjAj72SRbcqQfNCVTztSwN3cRxSrVtz4p87jNFbVtFzhPg7UqDwNFTaasySCqM",
      // Add more ErgoDEX addresses here as needed
    ]
  },
  
  DUCKPOOLS: {
    name: "Duckpools",
    logo: "/logos/duckpools_white.png",
    color: "#27ae60", 
    website: "https://duckpools.io",
    contractAddresses: [
    "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",
    ]
  },
  
  ERGOMIXER: {
    name: "Ergomixer",
    logo: "/logos/ergomixer.png",
    color: "#9b59b6",
    website: "https://spectrum.fi",
    contractAddresses: [
      "4B8vRwhxhAJb8TuN4RZpBeLmAkQUtf7a4QaYqqSCZAQHjyhzgVLGiFTPp9CaZRbssRnVHAzqUKtBBCWjfMSxpi1Z59H7sj1E8o6XFqYCRYFp1n2aC6tYptFLrrX3c1jXBhcsS7NNU5NLHSuCNC6bDf9KYhxfgQTtYkozrGk2qzB3aB8mmaC8ZHaAfzvQmSzcxGwtTyquk4yfeR9tsvrvhGPeyv6Ys74Q3VqQoVkuSMq21gRY5wgBz4gq6tTBY1Xv4BkHoFQm2wx8TWQc8Rof81DCePanX598Z9ZJzaDLnT5TDjQpECKPXvuuxLivbbFjtc4FZ65xTSHGk2uHsohRAMrMiug5aVa7UXwoRRLomvCrg8MbyowkuiQXcZWu8ue3QBTLuL5yy6yqxs2SYDPiFHqJhU3ag94Tb5Q2bPaJcAgomJehtn9BB5L9GoLe6Mx9Jti6F1WXgrGcuHeBQnXpiS8pRMN845AxseExzyvksmj4gyXEJqgookbneHtPuDW3QefeWH4LH13AvmXhm8QFTYdAFRuhXMBwJJbXL1yBcLE4nexa7d2AY7Hndr7gfecxRY4UnypdpLnpTTec5vEppaDrEx6KQ4gdeiDyJLmJCGHeB",
    ]
  },
  
  ROSEN: {
    name: "Rosen Bridge",
    logo: "/logos/rosen.png",
    color: "#e67e22",
    website: "https://rosen.tech",
    contractAddresses: [
      // Rosen Bridge addresses - add real addresses here
      "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",
    ]
  },
  
  SIGUSD: {
    name: "SIG USD",
    logo: "/logos/sigusd_white.png",
    color: "#e74c3c",
    website: "https://sigmausd.io/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "MUbV38YgqHy7XbsoXWF5z7EZm524Ybdwe5p9WDrbhruZRtehkRPT92imXer2eTkjwPDfboa1pR3zb3deVKVq3H7Xt98qcTqLuSBSbHb7izzo5jphEpcnqyKJ2xhmpNPVvmtbdJNdvdopPrHHDBbAGGeW7XYTQwEeoRfosXzcDtiGgw97b2aqjTsNFmZk7khBEQywjYfmoDc9nUCJMZ3vbSspnYo3LarLe55mh2Np8MNJqUN9APA6XkhZCrTTDRZb1B4krgFY1sVMswg2ceqguZRvC9pqt3tUUxmSnB24N6dowfVJKhLXwHPbrkHViBv1AKAJTmEaQW2DN1fRmD9ypXxZk8GXmYtxTtrj3BiunQ4qzUCu1eGzxSREjpkFSi2ATLSSDqUwxtRz639sHM6Lav4axoJNPCHbY8pvuBKUxgnGRex8LEGM8DeEJwaJCaoy8dBw9Lz49nq5mSsXLeoC4xpTUmp47Bh7GAZtwkaNreCu74m9rcZ8Di4w1cmdsiK1NWuDh9pJ2Bv7u3EfcurHFVqCkT3P86JUbKnXeNxCypfrWsFuYNKYqmjsix82g9vWcGMmAcu5nagxD4iET86iE2tMMfZZ5vqZNvntQswJyQqv2Wc6MTh4jQx1q2qJZCQe4QdEK63meTGbZNNKMctHQbp3gRkZYNrBtxQyVtNLR8xEY8zGp85GeQKbb37vqLXxRpGiigAdMe3XZA4hhYPmAAU5hpSMYaRAjtvvMT3bNiHRACGrfjvSsEG9G2zY5in2YWz5X9zXQLGTYRsQ4uNFkYoQRCBdjNxGv6R58Xq74zCgt19TxYZ87gPWxkXpWwTaHogG1eps8WXt8QzwJ9rVx6Vu9a5GjtcGsQxHovWmYixgBU8X9fPNJ9UQhYyAWbjtRSuVBtDAmoV1gCBEPwnYVP5GCGhCocbwoYhZkZjFZy6ws4uxVLid3FxuvhWvQrVEDYp7WRvGXbNdCbcSXnbeTrPMey1WPaXX",
      "0f9e8d7c6b5a4f3e2d1c0b9a8f7e6d5c4b3a2f1e0d9c8b7a6f5e4d3c2b1a0f9e",
    ]
  },

    MEWFINANCE: {
    name: "MewFinance",
    logo: "/logos/mew.png",
    color: "#e74c3c",
    website: "https://dex.mewfinance.com/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "9hMAkrPjRnT3ewjx6xkF6Sg4DQaxvZZvQBPyb6Y4FoUTFwy75Gx",
      "9fCMmB72WcFLseNx6QANheTCrDjKeb9FzdFNTdBREt2FzHTmusY",
      "2Czxg7U54ZyGMzjt35EYX9g98H9UjFqteuYWX5CSgGCYWAjg1ng2jgm4BHjA6u1Azeo7EYQsBMVLbhRreNASJu54ho",
      "2DnYaspUNUtsGfFELT8Bhvn1pGGE3nuHxyzxdDML4P31NgVPYZYwG2tsXJLsAWEvZRcKyBYXc6kUuoUpYVPHRpMQen36R2hFx4pBF6DmbeKWbXExsbXxyNaiQre58GUfwB2qktmaHETbgSSX64H2zFvCpPnLD8nPWAivN9zidxuWJyu1o8MxLf88bzJRBj8P3x75Qrd65KbfcWvFF9trYu6CyFc8M81DZ9GbPJVTNjvC9gdaRvkFBEWL8fM4xFTjZru3UT7NkbPy27RJwxgMNun7NQw3bhz3L5AGre4RXo8Ur4m3fJZjXK3GLUAGcTmV4VvjwF7WR3DDK2wiZGZnuWfkg8rXoyNBNf5NRe2FjoPWFU21R44ujLbnvsYRPZ5y24XzraKpLrYUhNDnMKHPqFo9CB6He8BnFWQzqQWJdWqYmdNgwbFC3yTuoyn1bNieRKPf2hXPMzQonRTcJBHLPXqgjhP39tbbc7fD83uDCxkyaT6TJzroCy7MU5TW159cDryPJQXwcbEir6EuACnqxs7e1BPzhFgDEdb3yw7m7rhvxYwcyk3mEamAdUJHxnnvi7M3uw8",
      "2DnYaspUNUtsGfFELT8Bhvn1pGGE3nuHxyzxdDML4P31NgVPYZYwG2tsXJLsAWEvZRcKyBYXc6kUuoUpYVPHRpMQen36R2hFx4pBF6DmbeKWbXExsbXxyNaiQre58GUfwB2qktmaHETbgSSX64H2zFvCpPnLD8nPWAivN9zidxuWJyu1o8MxLf88bzJRBj8P3x75Qrd65KbfcWvFF9trYu6CyFc8M81DZ9GbPJVTNjvC9gdaRvkFBEWL8fM4xFTjZru3UT7NkbPy27RJwxgMNun7NQw3bhz3L5AGre4RXo8Ur4m3fJZjXK3GLUAGcTmV4VvjwFTzrDfb2bShgGYjEANjM7Fx9b3CbQHdJWwfq88hUXeqcoDJ9fT97zRJCxLCTYTuA9CDVaENsGGiRWQHykDwcdPZRSEWL5tJUr5knHxejdkQqE6unn3pZnHdwWWXqUqMuYKpfaeSS4za8MYUx1AK927ouM4yxUewQPJpbeTt8YQKDdeRNRwahqbQjziLYfRc3A1e4fqAgtWSsWcwn4sNVAXTm3EE7wJgA14yezRiEdpdkiam3mFjYR6xne1GtcSfssF",
      "9fVqM8vqjpD6qBZQwnpheLT2AejFZLNBbhxRVzjALubnrCCZ8dd",

    ]
  },
    
  Padeia: {
    name: "Padeia",
    logo: "/logos/padeia.png",
    color: "#e74c3c",
    website: "https://www.paideia.im/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "3bseGyneBTFGJrm7ueHQFcDckgh1hzMJL8avfTECXVZuTbMd8ED1EzqyB8YT5yVEpR4jMFj9JxcEMBmQoQ1jbMRH34SarPaaEnQmhX5M8K5hnwgP8xb1yAXowMsKcmS5n4t2n1yWHhAcCAcdfDJDhyzZrbToqy8o4uXRWyRm2sVy1mymUoXMrbnSRjkojNw9PTLyKPtT1VD3GScKyz8v8AhgTXT7LJvt2QLJJnoAReGRoL6vrYpz7934gMUdsmmxq99LRQoiayRBUvim8joSAFNQMWVvmoqzkfXc6mRFeFo1YXbaBEiwevrz3xrXiEtqUmf4UPAs4os8KNwjVwgAGUXrChA3jiFaQpecjyTzCEFQqCbXRShVvZUsnovbxRrDBndpLeoLM5taaqi9HRCgD2rV2mgrc6iq2d9ridyVLuSFXPXNCAZpZKqBw4hW7FcESsy1D84pxf8S5AKdgEwKXb1pE86F1TVzgcmbKhJMWmxk2k46EaUw43AfQR1p5Uf1BRQWd2nzGmNaGpZbxd9VoNDqstXuTei3TyTNDw7HnmawXEpmZggFaB1hi9qhrz5Wbyz1KP4znhsm8biLec9QrFfPuN5bkFCon2Jm6Y37xKpzX3dad3S7y5Kf8Zxo3rPUdqr5kVT7H91F3QJX67p7WoidR7Dr2LvLabUEa4wfVFvG8DA71ztAFX1daTNkyAEu7j4wQUUuBzmCC7MNFMXx3YKaPmpy7d3xKo88XzygRiZocW1QuDZmBcxhrYhyUpBRFzUrgDsjyfmWKi9HoWzdxrHhrrafE5xfPEaishpQEEV5MdXoCKLzgxZYAFTgRj38kiLLKFRXR74GrJWntdHvkULDdtye2G1SU3PA4Qub4C2XEMYgCPMRyT7J1ybd8aH254DRR3ecVK8y9qbps4JLgrnEdNWDWqQxzMqVXFJfejcdLjS1G3X5reRhHHBDn4fdvgpGT6eKxaavpKPGckyvPNhGZqVFCJPwzBKFtQk9Ntko7EcJCdNUDSL2KWrypwcvScqrEJXyUYPMpVMP8uugEwbKRoMvn6C8xUF9bjkx7v5smugVGTiuYNYgN1EjEPUw93W9FejBStQCFgoxY7b6q5jWMfScki3oDL3fscQS7ZJBu3GmwZGC5Am5Av4TDVXXY6Rw7dS9gipoudeBnKehFXqPeGyKFuYQ16HgzfAMXvp9MF2cVYTZBhHPcugbDVugaYTUSaPtKAihhHjCj8D4LZBxEB3Zun72DrUb9dwbK2vt7RYcAmULa9wz4FyvYcjrqBNnAB3GgWnCMFEWZh2vg6hgEcCKDo7Dd9f1jSqRfnPHakJ8JdCX2mHpzSzBaNsvgWFqab5uqUQpXTKh39igGvEgNRizzHLtLEJ7ioFTMuQHZ3JAHpdSESSGDnsPR7dZ6aQLjN4wa2rNsFTG6x3muDVcvKZWNyiT3DtK7cvoNEvW8Km7e3Uc3kywaZnFrvJAYqfWxZdHQ2pKJcjhs8maFGm9dYkTP39sQ9uFzECahFRqy6WNrcsVuucw66i6cgWtHAR5oomf89fqskYrr55PoqcnAETCCqaHA3wD8ccXjvzKJwgnFCLX2ypBeXBumGgciu9EaGkZ3LJcodf8grpvjmZgPoNZKqQRNzGycFGm21YHEcjk98VaBNDFd9vArSvTtWrqq4xZmaeusHtE52ddnZNDTmt5jvS6QAJ8bd4bKvomrZ6fDX1r9nHydMaJCfqMxyHPEJT7gtJFPmFKoRjv7n5xDSM5yy6RAK5jVKf1fTD2F3uLuVs4AdEvdYvBBW8HKkpAUS9QjQqQaFwE9pP8uwKr",
    ]
  },

  NonKyc: {
    name: "NonKyc",
    logo: "/logos/nonkyc.png",
    color: "#e74c3c",
    website: "https://nonkyc.io/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "9hmS5u1Khhc4PFERTA2dGzSkDuwUrrENQEUAveF6gHj8xCi9qy3",
      "L3f7CYdgf1eLfrujatFbykCY4L4v2uf7S8bXaN2xbeEU1QjjtPEgYAwCYKyfuqouRXMF2s1EKnFA94FRAVRW3C7FdM84kgfG7uB5yJTxDKHJYxvvYtyHHUJ8Z9t7Kcc7a8DUTwopNBW9QnUrazesNNSQDZ2bk5BooEx5QYFsrq4YaNjK2LmBQJxR3ZxSY9SQ4kX149MEgRnf4BcCs9PepWwWw6befMEvcvtA2jHC3UdmapHabKUjU59p6KEPomT5xLQjK4hSjE6fEMpMmFPShjMRrZNQSauBkxWvYDKD7df94vZLFRPqTXiA2Wp8zGjxPfh2wC5S1keeCFCm3GUdKiMJdeaPUZxcakxPUC3fSikLbuwp6nCoVBp2FRPi8CU5hSDwusTvNpp9AHjwmaQVRm25tJvsi5AicYXg6utXiyGcAmBSFn3rUEB451xHE9coNFxZcpAsMnaL8fv4JMqmfWiemHnKeRAPok7UfhcxWXoUWx971t8KEG49pDWyt7PZqjtSqBz5UrxXcSCjYb1YkEj9gdBhBoLfDLNHuErLcKA6Dhtw4mawmwckiBzTJKo791KDvXeLxx5NTwEoUVSnnSwBx63e4P6kdTjQxZRT1Te4JWhDo6rLkETEXH5xm3c97dQkd1zfHERWsUgDatPeCQFMCYQxaEjxa6MRjDDv1amPs5pqacjWMSRabXcBiFU9WV3iLUMqDmf6DU3LSuxmCu2P5MPCNK8dpxZHr7ziHDqs6JU17yaaruJVXnmMxpUTxU1gXTv6nBohhvUsKdbQYBpxfuDauuticnYCQYW7EJH634y7G6yBfNKsmMHyJ2RVPQRyYhihNRYUUaEXJAYeakd373qo8C9NPwPy5XAxxiBTnwfTUki6UtE47X7EDaKJ4mY79VcobDiTkRJ4zGooWFxqhqE9ZbcJn8igp4UnPhbSkUKP2Bis1FTHhLg6CC2WqXnyHWQerCZH5iYGcectHuXfwDuYyH9n29wa4sWHVTnqUdMgmNpdYTjFHnCvUR1j7QTiVWdwEZYRpvnTZD96p9wWKHYhaVWBLuTo9W5vG37qhJvn88tx5UBEe3pqW5ZK9nJavPGCMy5wAG9xLEuP229Js1GWWwipzWtr5b4JXJ2iAB4qQCWAE9KDxSGt58YkN5rSEY6mED48Z7B3gm2o743yNzCa8oVM5DiPVD6eh45mzBQihVakkmppAHs78h3grJhmpFDqaenzifWFhpRyyK6n7xoHDXLqLTWgC9AU8cCqr7R6HByifGAEshH3itGABjPf4AV",
    ]
  },

  Gridbot: {
    name: "Gridbot",
    logo: "/logos/gridbot.png",
    color: "#e73ccbff",
    website: "https://github.com/Telefragged/off-the-grid/",
    contractAddresses: [
      // address
      "873uAozZGWZtbb5NskvFGM7h9uVm1VHnSnThQ4X8dwXms1DGHzGU3QjqwR6s3hXhaZgfmZjmFZaq5A3w2iaeAvMnS4fkFZFpUD8NqLEkPE1crXtNYNz8g7j96fm6ywXfQpzTk8SCo7Q6vYQbBfnzsZYVjWUhqoAh1TqruisuFJf3okNZKY5Zo8TCczvXAFuptYjsgTXcW6tQDxD719mYf5p97FPZpxeDC9amornQf19VQeEVsWeckzXqRKvZBvv6kYzg3b7bgpvwvRPNgeSMgjDSzjoPhXTQM7E9r4Z5GCuui9CyjeKueySeQ6wc966JnvKn1wfiTpxLm3nUZrcvooe11ZvuBy6ZxLsmNUzP7jnvhAXWgFu1aXx8zCU9GHG5XUU6eGk3S4z4ZLECQsMVZqFrmuaRp59DHMLL9CERvNqJiFWebcs1YMxdG3XLodsKdJqGKii6Hadakkh5aKbNAvMRGMRWYWirtZXnBrCdvg4cuzfk8eUBFsp7i4WcNb46Zszx1mstyyjwtkpXv8yXoQUv2QPbradxsyeQFex87k5zGeHJmLpXbdDieXfvEsjCef3YgeVtaWEeTQaMx8CFyPrQegot5b9nvTfUo6ryCjYYKgE4XNa7PXxNJ3x4B8jkagf9FMXPRU6Kfcqk738SbCNQDTCmwHyjjJWtnx1adTAujLU8wSJFYwWG3bzCdoDBfmcc3dARZxLMV6YpPkQ6hLZu148ZN7d1T8UuLu1gQLxAbcsVXkBpSLfP4EGu85te1BZazrF6BCVmw52V5246vzUXQm5VVPzXG3NiZRjZ2BGcnR479Z1DU9Vzvd34KQMnjMXmoxeELLAtTfeLp1musyJKURRXaRiYhK9F5Q5vAfBBU3NX8Vmtv4LJNDm8TKRVGrbkacTQnc8vGfitrw8m45CjFdbFjCvgxVuLAJ6eUgg",
    ]
  },


  AUCTIONCOIN: {
    name: "Auction Coin",
    logo: "/logos/auctioncoin.png",
    color: "#e74c3c",
    website: "https://auctioncoin.app/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "R6Hbr4mRLjU9WRxKtMZiCcm4VX7txovoioP1RZw47NU3tiauZqq4TNsriemh8xWWxXmcZP7rYwWor9EgSNMV9BQY7b7EF4X7yee4gbRLFM4mKGVno4XSWNcpdY3ogJBhFVuvE7TowGuUh3iAwncXEMon1Q1hLCKSWsuQLRpsWcqRxrEonCVx9msj2Pm4WhpW4TbSTRvF8QCvEJ6bC7ima4tVrzYzRJpTAehhqwBkWFMJe6jG6c9wV9pdpy4czSyURikZ4VEYTQt2wDf4GvYgP9hse2skL1e2AQs3aaB3ooFKT2chPRQVV5krGo8Lr8Fiap4Cp3LCqhERwHciWn6UfsqZiMcqWJEB1YbZz2VUJsWXNmBX2XDbDMs4QrETqYyVwCoK1Sad7V8CohpxUEVtgT4XseBxX5V4JxedvubnEzeDNQ7g9JYK1J4SYH3KEwEAPGMPuFuZnCNLL5iK7tcsrb99ncSMc4CH15NdRQSVJM3UKbATaH77qMYscKDYLE6R99TjywDPqRFvu4bob8NRPjsNzCtZ7Gj2vsTHdXnR7FjvQ1Mk55BrBxMym8kDZ2UNdkPpmcyCjHcn5Gcx2WFastxTeN1QUWMovp2iFmjYxYNEHWnHHoBjECz8FvKXmNUBLruez6HJp21oE7kQSN6oixrLCpN25bynDAoKZhXjDW8uMoqa5PqKH4gARAKSPsg4ShfptBdH",
      "xHu3f1P27DXd31Th3N8sxSfjaKVVoqeaF7gr4j1Y83ZFcd1L4RBhEy3df5sMezJmWDCy227TWMPnY1L4brtzpDJEPA3BUp1epttC3nTRrUfsCmt228GBBR3eGmovFvfPuUocqbJRkdVjRBcidV5zBtrWjkEJ5CpQSTXUY391M15P9sFKiS7GGUzYyqDBRHQXK2sPjXGLEqiSmaE6RRjLM6eFx5wva3YdkSj4y7zupsxAPLtfjNThg7E5z11aN8cU6thZrkvdmwNNMUBqdJT769B1pD7aY2WkaygcM2feqJJYJJtBmKMHZE8VoFDDpuescGn8wJSjRgXZkPaWPAYwcckSF87CFxdmDWRUeCLUAc2FuRoHuVdPyqbnNwf4Rz9e7yWy3RSBzqAZ2X2viFhT7M3WCFEnq8Eep5pNVdy3W6vjXgzbzoRdyVx9tpMh9Yp72Bfwvk2QdNkUUTnpLiVHdeCBptFm65EBkXEcgiW5fq6M2bNFwiZYPMzPZ4CU1x7SZuvr5SATaG9pm1wPFkfd6KCpNT5YxTrcRcPdgZgeDcJDiumnCKeHmXYZ3RvDcxGfe9CbMXSaEuHRST39aoJasvCWw6VAf2ZnUsWyxLDZ9LbxBXEykNuj81kiBNeBx3RGj7dsLygFS9rpuaTqmk3WyioXQCqppQ9TaeyAMZE29PNFLv2CHMbdYmz8XQKtKKMcbfmkBCsMm3NYaCyiT3gd8C8769QEGwuxerdXNJ3nFHB2xV3rs4DmgSfotZvFPksHw8SJicqMQmfWVa1jcpeg2j5gkem2fMTDGJXZWMbRQUpiRbNCWqZ6MDytZ75BYq7nZjR1CMZUekN4GwK11ukCjLEB75TdZagAkwG9R9KeAueCqsQ9TemE9a1rzZmHBghDRSuU66PPbiaXNs7T8JaMDyzPR99t58JEwVEyQnVeBJnMnHwDueDXah1gcvaQDjDmh5aRd9mxphKABesEqh4DndP2EbVz147JRW1QDw7mXwSvUvP4gUuwRkKGPgob2MCVM3ewiXGDpEgbE2QfZzQHkVHsTYGLmKEabqExUe7wPGypgcCzpfNJQrVan3zTsYN7TBcG2shTovcfxKDMU4mBn76UhrAGvGikDtdrovExPQdZBc7BTo4sPHyKwq6nTdeWikw7K",

    ]
  },

  SKYHARBOUR: {
    name: "SkyHarbour",
    logo: "/logos/sky.png",
    color: "#e74c3c",
    website: "https://www.skyharbor.io/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "26tpZU6i6zeBRuzZVo7tr47zjArAxkHP8x7ijiRbbrvLhySvSU84bH8wNPGGG27EwhJfJLe7bvRPv6B1jQFQqrWUQqBX1XJpVGoiNgveance6JFZ4mKv1KkRE8nBSB3jKBGnVJjJF6wR1Z8YXRsUqrTff4bfmtbhaRRjibnDDtKhS71spfjjTBeU1AhhQpitCDg4NFxmTLyV1arE7G2riZKzDryjWnCiEJGzWNxYtVt8uDxd3qNSRE5sHECwcsb98x7rn4q4FyHMvvWrRMPFfVgAQd5wHCAHwhMEdqUrSFQVkmUMavju8CLAgCNcVFjUBKPX4ooEHLUw3QkxS9Jp6fAFAGmzJ6QVD71mAZYMYhoEQnFyUBx1txJjVJjCrcZsW43dimbt5su4ahATJ8qRtWgwat8vTViTVXAcBmUSnqbqhAqTCxcsS5EFS6ApJSfthPHYUyXwtcbTptfdnUx1e5hEiGcwxoQ8ivufNNiZE9xkxi4nsBBrBVBJ7pfSSoHvbodkzLrq91RHYrvuatyLuBSxgJxs198xUQhULqxmWwgthJLrG5VVfVYH",
      "qNtfov7o2g1GYShDaD4a1QNv1bSjEXAbnWzVJQA7qVYogTFuxuw659G1WWwonQqA91AsYa9vL7JQLysRvMyNdZ6iLHH5mgx5RKn6tEE5uki3MPNg5cVrnG9rhZuKA3CpyaMbBBus7fxoYQsHgLCShaqJEyjFZsKooWqVJ1nFQeo9hiTCLcWd91B4EeWzrimYswG4cPaJyBwQp9eit1Hq1UtZ8dwo3r7vKsH7aJLzZbq6mky4itWHKueA4bybDQfPwYXoujsChY5jawj6V1YQrrVbzdxm66pBSfCdzr76nWp5VdnPJXbvnN6tHpv2Taivs23JJBPakAeDSpX1TuYx7Ce5KYHutTczNcytPQgbetWXNxTKzDsmzLbEX1bsWdryJnJT5bUHUXEEacWmz6JgUaKRbrJwWNgrpH5V3t6nvUgpZFpwQnNLYnLQs4tVHch3DeifD3f7BX4s5E3qArtDkNMPsY6AgUPd6kLNbfRvyZPf2RDA2CXn9ABmnKmTZdJYfc2bLHG1H7igeBH4g5Tok5fkjux6L8T8Pf7jBiV6WYRjD4y8E6idTTWrBJ9vvPJURnFD6L8jp2f3xt6HvKD1bokKUZyeTiu9hmFm3s9TE8x7ztCXeYUiJq7Lm4FzFsXkyqKgGDRSXXGmqDpwaWSdtH9Pn43kLWr8hRoMkAm1f9e6nhJQfCRu8wAK3Zv74vRfq",

    ]
  },

  XEGGEX: {
    name: "Xeggex",
    logo: "/logos/xeggex.png",
    color: "#e74c3c",
    website: "https://xeggex.com/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "9hphYTmicjazd45pz2ovoHVPz5LTq9EvXoEK9JMGsfWuMtX6eDu",

    ]
  },

  TRADEOGRE: {
    name: "Trade Ogre",
    logo: "/logos/tradeogre.png",
    color: "#e74c3c",
    website: "https://tradeogre.com/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "9fs99SejQxDjnjwrZ13YMZZ3fwMEVXFewpWWj63nMhZ6zDf2gif",

    ]
  },

  PROBIT: {
    name: "Probit",
    logo: "/logos/probit.png",
    color: "#e74c3c",
    website: "https://www.probit.com/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "9eg2Rz3tGogzLaVZhG1ycPj1dJtN4Jn8ySa2mnVLJyVJryb13QB",

    ]
  },

  MEXC: {
    name: "MEXC",
    logo: "/logos/mexc.png",
    color: "#e74c3c",
    website: "https://www.mexc.com/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "9heCed7HKoDwUXAnKU6P4mZZq1emzX7s4wLgaKziaEtxnVQEod2",

    ]
  },

  KUCOIN: {
    name: "KUCOIN",
    logo: "/logos/kucoin.png",
    color: "#e74c3c",
    website: "https://kucoin.com/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "9fpUtN7d22jS3cMWeZxBbzkdnHCB46YRJ8qiiaVo2wRCkaBar1Z",
      "9fs7HkPGY9fhN6WsHd7V7LMcuMqsgseXzNahyToxJKwHCc1zc1c",
      "9how9k2dp67jXDnCM6TeRPKtQrToCs5MYL2JoSgyGHLXm1eHxWs",

    ]
  },

  HUOBI: {
    name: "Huobi",
    logo: "/logos/huobi.png",
    color: "#e74c3c",
    website: "https://huobi.com/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "9feMGM1qwNG8NnNuk3pz4yeCGm59s2RbjFnS7DxwUxCbzUrNnJw",

    ]
  },

  GATE: {
    name: "Gate",
    logo: "/logos/gate.png",
    color: "#e74c3c",
    website: "https://gate.io/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "9gQYrh6yubA4z55u4TtsacKnaEteBEdnY4W2r5BLcFZXcQoQDcq",
      "9iKFBBrryPhBYVGDKHuZQW7SuLfuTdUJtTPzecbQ5pQQzD4VykC",

    ]
  },

  FLUX: {
    name: "Flux Swap",
    logo: "/logos/flux.png",
    color: "#e74c3c",
    website: "https://runonflux.io/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "9fCKJ7g6ZffHAQb9UQY7S6YLF6dRVejBAXw284XNazkq8XLuZbw",
      "9hZ9ygGKcQ9z1oaYQEmNF53aiNQTazhBo9DFC8tQsR47a15ueGw",
      "9hfswHWqDMd2pLDRFCfxQWDTEjNwfsNSw6tweedZwuBe8z92ZyV",

    ]
  },

  COINEX: {
    name: "Coinex",
    logo: "/logos/coinex.png",
    color: "#e74c3c",
    website: "https://www.coinex.com/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "9gD9khJaxi3SvcX9VVPQ3vnV3xUTonVQe3Fvg5X7cGGbXMRgd8i",
      "9i51m3reWk99iw8WF6PgxbUT6ZFKhzJ1PmD11vEuGu125hRaKAH",
    ]
  },

  WHALE: {
    name: "Ergo whale",
    logo: "/logos/whale.png",
    color: "#e74c3c",
    website: "https://gate.io/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "9fu1mLunnUUYEdJSXRUu1KZDJyJZV4gajd1uEFMEBsCWLEAJENo",
      "9fNFeYEeP9BYZCBpZNvdyesgGt1maqzycAaJZLeAsHMoxNd2oY4",
      "9gSeGpfX7Q79XFwkH4V9hHsEqVWg9oY3V9t6WPkpudugn9s5t8u",
      "9hUhEkUXJWYwigebSqhLMsLhmLj84UQSbChdBEbDpsFL59PKQ27",
      "9f1veLQTxoAqxwYRGDuBfyaHhJd3cEwa34Ta69WUhrk7xa5ff56",
      "9etDbVVWiZqQyPdKy8zn1XnLK4xH3h7ojxj9joPXRA7PHxfSejf",
      "9etajWETQahf17pJNajRR6WPSxxz7MySS7HHWZEm4TXYQEevGCn",
      "9gYo8cdgXQA7bysv1V5FZh7sRHrUDcHc9xYwgwHh6z9sNkJLkm4",
      "9fe81G4udUeCNoKKUWTUhzs5B9kzuKAH6YCCaJMmSTMkaKHALGo",
      "9hzhxCYK3tLw6KFBRg6dDUS9zvrJcrsHpoyFRhdDQ46CEuFwexh",
      "9h3pPBU4sFuVxqWunPJNXuuEPMWBWrpewzKYhSZw5PAHKdmLnaf",
      "9fBwfXHEpvtcBuJr2A3oeM6oDnLPo86GPRg1ftKmwwfd3e8pPKQ",
      "9heprrYLa5i74DiAVerk83HcNTdhzUwDJmU7cTwtGQWDGDW61rC",
      "9hXUYMuuSnsxFst7g4Wp2ZNvaggPDKqFnrWpiAfKSTDEGrpopiZ",
      "9gwBXonhDNqKdHi3XHhx1EpEJCn6YM3AJpsZyNAHnFsNJQh4sXB",
      "9geuhjLKGFhRBkKBBnGkhNLX1DrzJSWpv6ApqSoa6wqEekhXLmh",
      "9hhQwN2Ku8ki6GvrdiphK4g2rwqJirXA1QSsNzMjZGigQPBbRus",
      "9gN2v4mLGABGMcrBXL5pGkm6gjbJYkEvDqwuN5AUABmX2gPzaE4",
      "9gKyL2AsdNgnL3a67AAXtufPoPUjoobwHWtFXNMART2QSZvyCXp",
      "9gt6qyTtxrLSkpU4HAxearigmJPZ6KVK8qgHQgkQTpJS2ovjtQp",
      "9gQydN8DJMoeULFe6YtU3sZutJTTDeDH752BRWjk69SG9siJFso",
      "9h1D36JprBxfcbhBGLTFPwKavamPiEnQpZ5VEHymQYP5RaBBHyQ",
      "9fgc4cBEMfz8RDfwxduRA895Sxm5p9LKdE3DqfEQp2LVU1XwyT2",
      "9gDb3eYPUnM2z9s1ZZCKQLsgcPFh43eCTWKaUfEut7f6cEf9Pip",
      "9hhDmzGSFmYsggZTtqLp3aETvbwU7ajLm4Rsk7qDgn9XXYnC3i2",
      "9hdGM8D8fx2qiNJf1g2pX4WnkdGMmG75RNrkz8znbwnfVBYmct1",
      "9hGmiKXGRcyTwKL7aV1g7vpmg2dZxpD1kKtycKDzPPd1tGyKU7P",
      "9g17JJFdp9EN6ykCkLLfio31SrmVWR9hLH1qBJD9bkUoaBtw1tK",
      "9fQq2JKnXoTfh2yMPYjcTTfSuboc9UNUs2D8EwdnvBSNa3AjzhS",
      "9gjYGJ6wsNBXjpeYhXNL5uDzcemCCcS81kqepGJApZ1EMQRKHNS",
      "9g9kH6Et8uzEprJjCzaMncGg3X9YYF46viiGRSFtMvFuNdQWhqY",
      "9i7EyCpzs6CPDphAJtM29uSwr6zHLBVyV21vGnHwvnNx38ErNn4",
      "9fwXds7ADvbnTVCTJyKJDV5U8ovrK34rnaqTJEdFQgqeVbYuX1w",
      "9hFUZvD8xPiJ9frr4zDnrktjSStcUmuncu46rZfsvoAeYFMRK5b",
      "9iK7njon3hvdBvuMoVYPK21CGXPKDjWhSQPxVASY5XZ91LEynnr",
      "9fYYBfj3fjutMWHZcYQdQ72GVpRF9wvWCfKKAr2bc675LcW4rb2",
    ]
  },

  AUCTIONHOUSE: {
    name: "Auction House",
    logo: "/logos/auctioncoin.png",
    color: "#e74c3c",
    website: "https://ergoauctions.org",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "2JhU6VoVfmAxjDRnfJxXp77vERh1cgiu7wXocpjLqVANTFH2F2WWiBDfh6eV1NFAxCXWYhvKjMgHZLKMGxadKhWbRJR2hYCaUwP1LfcWV6kqEJokSxf7Kk3TyG8Zgx43kRP7n2eXSmPQYbSghY3zKaFmmi618EJYxgdwMuse9PH16ukYfWz7KXqbjczJLUTMNa867nJ2KmhrMUYgLHBTBKh6taK2grAVN1XLGgRQsKGqDeksAHbocytvcyZYqmqApftSHZFuBt6AxjUZkpN5PvkZJT9VQjQiN1jSWXB4sijF1B79AFDJmvX2yMt1wav9Zd4C2HSuKDwKEeNgQVfixRh9eH3pftpsaG9aoCvrJz6gD4JPkbUFLiuHkRV8WUKvD99KkbbwU8aJszSWcRRR4jbnwKjuZ2wSL1QMUyBmwEi6rrb1i7bN5FCUtvSyU9AYdZhMELWEgF9P5UDSuMDWWbHfJnviyg7C2aUA6YWoGt7W2xPNPbHRCmBWkGUw18fyqRmMLpYiNnLdfBoZwn2ECxEcyj1JBNH7U88MiDnYwZp5EzTSTSTLvfAT2YRhd4qa3tvSLCgkwLAXa4FEui8gUfEQ2jrGBMjSe8L9qMusncpAywZhB5Q6VepENxstYAPyDEZqhCotuzCC3anJcq5LZzRsbEC8zKLxvV7uMqg5bUJdSdo472CG98DiRwAYgG6Qiia3JwVFX9bHu5y4XdDpEbvr73n7UEi3FMaPG9PPm4xedNryfSdR8dSdBm7Km2aBGcH4nLoTGnHXRkeGCFbfA3dcAGwLQGhq7N4JhaQ6LgRS32Q1Fo34xE73aunrHy5hhAWq9ykpz6Ao1ks8sgorVW23R7V87d6oy7rfhKo27FK6YYxvwS9reB2qKwPDRg3JPWGDemS1oTmxU95mg4HTQ4HjzBbTEJreUofLxUdgkkZGknFA1HGSJZHJ1BFui86C7CrUq1UbNQmq66n8aezkC332CPB9ddz7rLgFF7tomCKRWYibwKquVJ875a7svvsw3465hADbaQ6pX5adj1oUHWQZeKdfBHhipHYqZw17JUUBb1E9cNjZVWiaSB8vN89R6oWaebQhL24b9dUpmQrV7ANaJ9AFFZE4ocsQrVHiak1Y4tiHNuG5cT7kYfT2mNSB3p5wqFNu2DVmX4V8yQaxCBKKkhjFPjmmeErjtQCbXbBuV8CPt8b3Ak9jyaqL9WF6MUKTcFrDWnAgwdNtfXT7ibnKBWxrpvGTqr7oUZFsnVqdaCgUuYeGwyFM66yrYRr9SmU3bjUhhwazZQpAzzFQc4yos6e3PfYBCZd7aTjduNDUkLqV9GEM43cZtKpU25c4AWikiQqzeBAGPSYpPxtxtzKoN8izE8PekBMq5ejv7qoVzfMqJ9SWwN1MgVJj7wjyuJ98x1QQ8VX9scodhfU1Ff3MgZk7may2kefyER1qqTzwFZYTbYhDzRJdb98QEJz6b4aZiBpurueSpjXGo4qMzkfC9467DGRmwQCbBLN97nfJ2d8zgeihr6zLyDvLK7rNBGc6PVp9SEsv3cvxQrvVShYkAqxUxTFkbdfvzsrdGHanUaQ5zZX24GRxM2wb2GWUuZxkBcpVj6a5gKJrQtjyK7d3WADNoEcbcAYphgJf",
    ]
  },

  Pulse: {
    name: "Pulse",
    logo: "/logos/pulse.png",
    color: "#e74c3c",
    website: "https://pulserg.vercel.app/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "BhRz5Qd2jtgTdaKPewYd4EjSquVegcmgxkqumH4GioKABQAGxofYfLiMCzy3EbFYFTBvHgnw94LkPa8NtPsv",
    ]
  },



    CROOKS: {
    name: "Crooks Finance",
    logo: "/logos/crooks.png",
    color: "#e74c3c",
    website: "https://crooks-fi.com/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "9gpSJSBCSmti2xDqjSgf51N4z5QpUePJrF3cS8jto62ufhDrxLm",
    ]
  },

  CYBERVERSE: {
    name: "Cyberverse",
    logo: "/logos/cyberverse.png",
    color: "#e74c3c",
    website: "https://www.cyberversegame.io/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "9hjDAn8egB1RwNsMWvCV6fvx5GLRh53QzZ5rVe7TNbapxjwC6Yb",
    ]
  },

  Tokenjay: {
    name: "TokenJay",
    logo: "/logos/tokenjay.png",
    color: "#e73ca0ff",
    website: "https://tokenjay.app/",
    contractAddresses: [
      // add real addresses here
      "DaJygexrs8GgHiucBGuPQcrryQPESkfsKtgMAEtnFeYBBST2x2kNQS3iucFhNE9d7EVWGVSj3eFPbuJQo1Mhy2SanJ1nFbE9xpb6W4R2m9pRisRydf15oWQL6GYs8CRZsQuQ4WiApGMZPZxpddnRBWTTSPiBiazBkQmqELhuu3iimuBTK19VrLBCknsLbFEHEWnYQieC828aE5EoR7QvH8gC3YhEbet2GqDhfpcXhVcnNCNBT8RJx6n2SegZg4ZYn7dmjhpp5vR3TszinJ9zHrFwNuQerXFAsM3TiGw7r",
    ]
  },

  ERGORAFFLE: {
    name: "Ergo Raffle",
    logo: "/logos/ergo_raffle.png",
    color: "#e74c3c",
    website: "https://ergoraffle.com/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "9hjDAn8egB1RwNsMKWS1gdArUXRDwTgdW5XbBHwZnusjpchYJcoZXYnFqyHN4Ere7BjZAdJepNdkAuE3ZbXyJxnXSwDKrvzmga5MgDEySeF7r42ixE8Q3VH11D9doJT7C2pxBHgn8qsCvaSwfG9zmyqYSqD1UTjXXpV5u3JPJFXT6fMtgM9dNsDr7o6i5gns7M54Gkv7iMkQgSWtCHBC6CaKfBpmXUkoRYCvjxEjSuj4MFUG48psPeU8JaFcPWuj4k6vnjatG7WyLng2zGYsHWSAtAk4kJ2EkHrNZtY2gmC3UePuX7KAeoFyAMB7CquEThKvumCDZTUuZpwMnqzLH6tToiAMPqNyXVphWpTmquobhVY7DJGTzFV5LyYqfomGwhsftE1u4Kt2vPY3Zbjwzp5kzkhvJwKu9ouxVKrb4XRaoKWy7qX2Ne8gi2SHykeRX2dCtKMaeAeyXaCNGPwd2yVPPodBK62FEopCFGrRbbuzr7rzjLTUWvCV6fvx5GLRh53QzZ5rVe7TNbapxjwC6Yb",
      "apzL4keWhwqapswKKRZ5rpXdjP8FRrEfJNxjRpx4SVvYyDoFnAdgNxC4kSVL1ajCAGQGLxubJV1x9Uv6MRP39JhNknMmLcvuYkq4beJgFhyhnncaGtJLCG8En8gxj6iezAjvGozMozV72T2e2hSDDmNZQgWKQMUFAFc7fLRqeQedtCzPDmYbmARZ7Nb7EmqbDxs1oVWsEg9VuzxizkCjkJgrR6XJB4ZH25JXFUBL7bYUR7dwwESgxnLEsKz9dJhiNkvajNqz4vJqeSSqJfDox8VYhmZ7reZt84Kdqf2zjbrzs1UeZ58nbmUACWkGSfUuvG1VWAN5391QaNxoyvrG8Huy4JXdJRBCgTRBPm7pYmGxu6CtEdB5ovXGV4HP1eMLjcuhciJV5fQtASYqq3gcZnYHJgk4sSmHLnXuyoL5YsSMRTVDsnczPpEZkcQi37oJZz4F9gG8mS7E7kwyTaFgSSyDb4coXRnSvDwYTZwuqDo3VDjp4S95pcmRcaJUHWGG6a4JaBhXHuvYbsc2ENXou4LDHUFcEbxarQCrx67cbAH4ZfAyEjfNuoDgm1cbeJj2KryNYiAt4NxT75WzEuL4DtDehWQeVdo9BtcTYX5iATbG61ihkgkm5YCLMzFszYCsPZGBLCEZzPN1VeX128KZQ6kpCngu5TnxaDQxDCL1aRBP5bJXwUvFc5uZBrH5wb1xerFMxmhv3bhpoqyvtPrSwDhjyoJr15iF7WahtvB6ZztJkrxvXqf6QRReSYieAwjfJ4dGXFRLY7DDrHdYkLiM7LZgEbAh4eYjQYKAAZ3127JPb8goQkZFmLC9ebUcq4Cw76QGtSES6TU6wGM8dpkE8y7bGygerS5WcJnsXWnJBQAbqD5T9c5sZLKceuHBNjMQKWdTNAtBnsfQTgK8gPpbUkCeeGjWJq5vD6pQXvEK4wMrDUqvWWiB34cyTPhLKax5cXpPpsYg9qSfVVbKMJfuFUkwQeabEZdAaJRhcmfTp468z5Bd5JoPKr4a9cqNSDGwurPWqUvEdXhRi4GaCKJBLmfdGQ5n71KhngS67CCz2mGzQ4WQaS91PjaGuNDoNMBnBc98tVfVZvPSjQ6pgphpSWcRGfb4q3yxrhbiyWt7EhMgdaKDkiJu443iWVjCLkF8YkqDzCNJsCUwYcb8J8qZfydtZBWMvCrQWk38v1DYQ5yx4742UhU5jSFTCj5r9uGvCkX3C4Vyjr2kmXvXR6XMjKLUjWhW2CWbTbZoQVDUSfPqDukfebfqDhTHwJcFDSpKBo2HsWhcpfG9QhPwh53rZAL1xq6MCCUeYnU5M3xQC",
      "9i1Jy713XfahaB8oFFm2T9kpM7mzT1F4dMvMZKo7rJPB3U4vNVq",
    ]
  },

  TIPPERBOT: {
    name: "Tipperbot ",
    logo: "/logos/tipper.png",
    color: "#e74c3c",
    website: "https://ergoraffle.com/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "9fEVRjBn42bk7XnzaZ91sdzrqyd25msyBhW8731TA7CMPZC1BE2",
    ]
  },

  SIGSRCOL: {
    name: "Sig SR Collection",
    logo: "/logos/sigmanauts.png",
    color: "#e74c3c",
    website: "https://ergominers.com/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "9fE5o7913CKKe6wvNgM11vULjTuKiopPcvCaj7t2zcJWXM2gcLu",
    ]
  },

  GAMBIT: {
    name: "Grand Gambit",
    logo: "/logos/grandgambit.png",
    color: "#e74c3c",
    website: "https://www.grandgambit.io/",
    contractAddresses: [
      // NFT marketplace addresses - add real addresses here
      "9fSuzs5tQUSaitGQhurYFfHJUBqQ4pz94BTvwQKL37vT81UcEij",
    ]
  },

  HODLERG: {
    name: "HODL ERG",
    logo: "/logos/safe.png",
    color: "#e74c3c",
    website: "https://app.hodlcoin.co.in/",
    contractAddresses: [
      // Hold Erg
      "TZPn3oLcgqXcSLXXguTKqW6TXsMC9brGikXUrMfygBTPdeLgbKLkWj63EQ8rUQQodcVveRjDSigJ3CVd8yjeBwY4jQLr6ZMxDXTPn7V42zNTskCp18maQwN3p4S82tezBcJnTdWoSzeQVbqhARUyNNFjKdyKc6Z49XKkQL7jktSJcG4fnFayBqPZRhQMEB1ZZ12bU2rX5SkQj5jE65N2ZFCTi6WbNeNWWZQYPtZv8fGVLmNdhxgg968LYPLNLBJVa7rUo6Nyce4CszBYq44bD14rvKMZXq1zQ6ZjkFRfmXjDFg92MsXGuENuZdPnTgKJ7Cdct3EP4UFjgZx1PQSauX8own7pPEAf9MBRdF84WNqo9cbZhvrhUVvispD6bP2AoCZWKkrppi1atoV22RPxbouC1rkpsKW287HAXxfiwP8VKVDRUi1aVjRvFP13RpyrBf9cu1z44xnJwTC9ui38XPAUjz4DWp87mGh6JC54z2Mqyk2nEaai7nBP4fPW53XSExd5AK5JC9fVyfdrRtiR5ADkcc2yqXrF",
    ]
  },

  USDORACLE: {
    name: "USD Oracle",
    logo: "/logos/usdoracle.png",
    color: "#34495e",
    website: "https://sigmafi.app/",
    contractAddresses: [
      // USD Oracle
      "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 ",
    ]
  },

  GoldORACLE: {
    name: "Gold Oracle",
    logo: "/logos/gort.png",
    color: "#34495e",
    website: "https://sigmafi.app/",
    contractAddresses: [
      // USD Oracle
      "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",
    ]
  },
  
  SIGMAFI: {
    name: "SigmaFi",
    logo: "/logos/sigmafi.png",
    color: "#34495e",
    website: "https://sigmafi.app/",
    contractAddresses: [
      // Sigmafi address
      "3FdyuY8fqeTtYcsuvTsmsw4ZBGde2cad6hyntGxzSY3rd4JtTwTvK64xp3XJZvYNTijrTMZMQxkFiULuHpq46VFbAiSSHXLe1qy5WXNRELj4tcx6wEPbSDqzDyVbY6wKFQhmvYQT2XjqLJAiBGV9F6f2uXrjXFPzPnXpVeJnWc8ob1wMqbfgBQKdfu24qx3pejkAfAz2hmQQ57xgzGwHCcGyJdad7UxwmDetAUER8iwE32rygGCmqXaVeKGcJ33epYNGpDLPnYUg3Qz7eYuHHb7mAqwkEp6XGE1jWbf8nS7TA1taNpakssbWYN2YmB9NBG8nWNzLhc9QBdqyAn9WQ63Jh1znt2up6sQJR7xnon9ZsYoeo7bErzg4uoJbTLzwjhZBJ9En9bMX72xUb5zhvSSua6CseMMA6s86g2mwrieRwqFM7CGDypy78MzWS1nagUBKLet8LAFFpb6DKBK1h2HpAvLnMbWB7Kp3rJ4be6ed5crNdZTqhbSww96P2KNSZemhwfgAkUFjMJzB2dEG9VNAW1dMk5nBrS8JsRHhYpPqFcJiFtQvcar1ijs2PqsR9k4P41Y99iomfYXkSoA6z612v1U1C19ASVurzuxGP1vNwNyKLceFVTYXbgkgUFX8Z2nwMz6d2TCa4XTpt9daV5sBV88YJgCiYbL5QhxnoTdYRZbxu725jnV7gbnX9FWjLNaXYJubi5u8kPs3MYzSALeUvtfx6wJV1XyBn5DMbvy8XgFFMKyxtUrfU3dAVaZmUZJnYy8Dz6qrf8tyKx3uU7RfosjV7rcAFRDpozznWRfsxZUir5EzcVFQc9NbjB4HdgJxxvUJ9Nr9F8XCQLL89wCTtaNZBFF284qLtrQ",
    ]
  },

  TWOMINERS: {
    name: "2Miner payout",
    logo: "/logos/2miners.png",
    color: "#34495e",
    website: "https://sigmafi.app/",
    inputAddresses: [
      // Sigmafi address
      "88dhgzEuTXaRQTX5KNdnaWTTX7fEZVEQRn6qP4MJotPuRnS3QpoJxYpSaXoU1y7SHp8ZXMp92TH22DBY",
    ]
  },

  DXPOOL: {
    name: "DXPool payout",
    logo: "/logos/dxpool.png",
    color: "#34495e",
    website: "https://sigmafi.app/",
    inputAddresses: [
      // Sigmafi address
      "88dhgzEuTXaUPpNAbKL7UeNUFEcjkoqW6ev5P1hkynBmG4L5baYdZ8rSPYCDNmvwBLiJR7ABjndPhqGm",
    ]
  },

  HEROMINERS: {
    name: "Herominers payout",
    logo: "/logos/herominers.png",
    color: "#34495e",
    website: "https://sigmafi.app/",
    inputAddresses: [
      // Sigmafi address
      "88dhgzEuTXaSuf5QC1TJDgdxqJMQEQAM6YaTTRqmUDrmPoVky1b16WAK5zMrq3p2mYqpUNKCyi5CLS9V",
    ]
  },

  K1: {
    name: "K1 payout",
    logo: "/logos/k1.png",
    color: "#34495e",
    website: "https://sigmafi.app/",
    inputAddresses: [
      // Sigmafi address
      "88dhgzEuTXaTj2AZkM2vwnemCYyAUJymaFf8iJPUYmgLkJqQmPd3DTubYS5UfL75MhQbEjmuhBMbdspA",
    ]
  },

  KRYPTEX: {
    name: "Kryptex payout",
    logo: "/logos/kryptex.png",
    color: "#34495e",
    website: "https://sigmafi.app/",
    inputAddresses: [
      // Sigmafi address
      "88dhgzEuTXaTnTZomXPfuJ67oYJPbrv17yNkLjN6Nj8HxZEUf2iAdiv9gTqmnKKa2i75zmUtDnPQovBb",
    ]
  },

  NANOPOOL: {
    name: "Nanopool payout",
    logo: "/logos/nanopool.png",
    color: "#34495e",
    website: "https://sigmafi.app/",
    inputAddresses: [
      // Sigmafi address
      "88dhgzEuTXaRp6WD5jWZSnXzBbA44g1xSMk6Xv2r6Cey8snSH78S6ZbWjP24yyPTDCCZByLpNXXe6NnN",
    ]
  },

  SIGPOOL: {
    name: "Sigpool payout",
    logo: "/logos/sigmanauts.png",
    color: "#34495e",
    website: "https://sigmafi.app/",
    inputAddresses: [
      // Sigmafi address
      "88dhgzEuTXaQDYikoEkCMEPRxDiYnVRfiqhf3uLcMhbTPrTrrc7wkyF5LFMmgJyT4mPa6ucnmk3QTeUo",
    ]
  },

  WOOLYPOOLY: {
    name: "Woolypooly payout",
    logo: "/logos/wooly.png",
    color: "#34495e",
    website: "https://sigmafi.app/",
    inputAddresses: [
      // Sigmafi address
      "88dhgzEuTXaQ2HPUskY3hvgMA5uCbQWwZNPbMC1Hem9zM2V9U7KMah7LYWS4Hm4WECGuc22nofdQbHbY",
    ]
  },

  UNMINEABLE: {
    name: "Unmineable payout",
    logo: "/logos/unmineable.png",
    color: "#34495e",
    website: "https://sigmafi.app/",
    inputAddresses: [
      // Sigmafi address
      "9hhM7ZqQCVX6iti8Jos8BLv2MTVis51mm8sQNfwXfUqNgTjEbqv",
    ]
  },


  JJPOOL: {
    name: "JJpool payout",
    logo: "/logos/jjpool.png",
    color: "#34495e",
    website: "https://sigmafi.app/",
    inputAddresses: [
      // Sigmafi address
      "88dhgzEuTXaS7z8MA868ZjU6ujmWi8Wqcx7VK36jcogWt8cRCKoGJYE6ezDe5g7f6fG7arqXNhuNP8Je",
    ]
  },

  TWOSOLO: {
    name: "2Miners solo payout",
    logo: "/logos/2miners.png",
    color: "#34495e",
    website: "https://sigmafi.app/",
    inputAddresses: [
      // Sigmafi address
      "88dhgzEuTXaRiLRSYpvTCXWoN3A86gnWs3Z8BWkJGkGMXsR3WzUUyqbB47YAzhhsB6HJdJ4tC5AFYfSc",
    ]
  },

  
  P2P: {
    name: "P2P Transfer",
    logo: "/logos/p2p.png", 
    color: "#95a5a6",
    website: null,
    contractAddresses: [] // Default fallback - no specific addresses
  }
};

/**
 * ENHANCED: Detect transaction origin by checking OUTPUT addresses against known contract addresses
 * This is the core logic - looks through all outputs to find matches with platform contract addresses
 */
/**
 * ENHANCED: Detect transaction origin by checking OUTPUT addresses first, then INPUT addresses as fallback
 * This is the core logic - looks through all outputs first, then inputs if no matches found
 */
export function detectTransactionOrigin(transaction) {
  if (!transaction.outputs || transaction.outputs.length === 0) {
    console.log(`🔍 Transaction ${transaction.id?.substring(0, 8)}... has no outputs, defaulting to P2P`);
    return 'P2P';
  }
  
  console.log(`🔍 Analyzing transaction ${transaction.id?.substring(0, 8)}... with ${transaction.outputs.length} outputs and ${transaction.inputs?.length || 0} inputs`);
  
  // STEP 1: Check OUTPUT addresses first (existing logic)
  const outputAddresses = [];
  transaction.outputs.forEach((output, index) => {
    if (output.address) {
      outputAddresses.push(output.address);
      console.log(`   Output ${index}: ${output.address.substring(0, 12)}...`);
    }
  });
  
  if (outputAddresses.length > 0) {
    // Check each platform's contract addresses for OUTPUT matches
    for (const [platformKey, config] of Object.entries(PLATFORM_CONFIGS)) {
      if (platformKey === 'P2P') continue; // Skip P2P - it's the default fallback
      
      // Skip platforms with no known contract addresses
      if (!config.contractAddresses || config.contractAddresses.length === 0) {
        console.log(`⚠️ Platform ${config.name} has no contract addresses defined, skipping...`);
        continue;
      }
      
      // Check if ANY output address matches ANY contract address for this platform
      for (const outputAddress of outputAddresses) {
        for (const contractAddress of config.contractAddresses) {
          if (outputAddress === contractAddress) {
            console.log(`🎯 OUTPUT MATCH FOUND! Transaction ${transaction.id?.substring(0, 8)}... detected as ${config.name}`);
            console.log(`   Output address: ${outputAddress.substring(0, 12)}...`);
            console.log(`   Contract address: ${contractAddress.substring(0, 12)}...`);
            return platformKey;
          }
        }
      }
    }
  }
  
  // STEP 2: If no output matches found, check INPUT addresses as fallback
  console.log(`🔄 No output matches found, checking input addresses as fallback...`);
  
  const inputAddresses = [];
  if (transaction.inputs && transaction.inputs.length > 0) {
    transaction.inputs.forEach((input, index) => {
      if (input.address) {
        inputAddresses.push(input.address);
        console.log(`   Input ${index}: ${input.address.substring(0, 12)}...`);
      }
    });
    
    if (inputAddresses.length > 0) {
      // Check each platform's input contract addresses
      for (const [platformKey, config] of Object.entries(PLATFORM_CONFIGS)) {
        if (platformKey === 'P2P') continue; // Skip P2P - it's the default fallback
        
        // Check both regular contract addresses and input-specific addresses
        const addressesToCheck = [
          ...(config.contractAddresses || []),
          ...(config.inputAddresses || [])
        ];
        
        if (addressesToCheck.length === 0) {
          continue;
        }
        
        // Check if ANY input address matches ANY contract address for this platform
        for (const inputAddress of inputAddresses) {
          for (const contractAddress of addressesToCheck) {
            if (inputAddress === contractAddress) {
              console.log(`🎯 INPUT MATCH FOUND! Transaction ${transaction.id?.substring(0, 8)}... detected as ${config.name}`);
              console.log(`   Input address: ${inputAddress.substring(0, 12)}...`);
              console.log(`   Contract address: ${contractAddress.substring(0, 12)}...`);
              return platformKey;
            }
          }
        }
      }
    }
  }
  
  // STEP 3: If we went through ALL outputs AND inputs and found NO matches, then it's P2P
  console.log(`👥 No platform contract matches found in outputs or inputs for transaction ${transaction.id?.substring(0, 8)}..., defaulting to P2P`);
  console.log(`   Checked ${outputAddresses.length} outputs and ${inputAddresses.length} inputs against ${Object.keys(PLATFORM_CONFIGS).length - 1} platforms`);
  
  return 'P2P';
}

/**
 * Process transaction with origin detection - works with existing transaction data
 */
export function processTransactionForOrigins(transaction, walletAddress = null) {
  const origin = detectTransactionOrigin(transaction);
  
  return {
    ...transaction,
    origin: origin,
    isWallet: isWalletTransaction(transaction, walletAddress),
    timestamp: transaction.timestamp || Date.now(),
    originConfig: PLATFORM_CONFIGS[origin]
  };
}

/**
 * Check if transaction involves user's wallet
 */
function isWalletTransaction(transaction, walletAddress) {
  if (!walletAddress) return false;
  
  const inputMatch = transaction.inputs?.some(input => input.address === walletAddress);
  const outputMatch = transaction.outputs?.some(output => output.address === walletAddress);
  
  return inputMatch || outputMatch;
}

/**
 * Calculate origin statistics from processed transactions
 */
export function getOriginStats(transactions) {
  const stats = {};
  
  // Initialize all platforms with 0
  Object.keys(PLATFORM_CONFIGS).forEach(platform => {
    stats[platform] = {
      count: 0,
      percentage: 0,
      volume: 0,
      avgSize: 0,
      config: PLATFORM_CONFIGS[platform]
    };
  });
  
  if (!transactions || transactions.length === 0) {
    return stats;
  }
  
  // Count transactions by origin
  transactions.forEach(tx => {
    const origin = tx.origin || 'P2P';
    if (stats[origin]) {
      stats[origin].count++;
      stats[origin].volume += (tx.value || 0);
    }
  });
  
  // Calculate percentages and averages
  const total = transactions.length;
  Object.keys(stats).forEach(platform => {
    const platformStats = stats[platform];
    platformStats.percentage = total > 0 ? (platformStats.count / total) * 100 : 0;
    platformStats.avgSize = platformStats.count > 0 ? platformStats.volume / platformStats.count : 0;
  });
  
  return stats;
}

/**
 * Process array of transactions with origins - integrates with main API flow
 */
export function processTransactionsWithOrigins(transactions, walletAddress = null) {
  if (!Array.isArray(transactions)) {
    console.error('❌ processTransactionsWithOrigins: transactions is not an array:', typeof transactions);
    return [];
  }
  
  console.log(`🔍 Processing ${transactions.length} transactions for origin detection...`);
  console.log(`📋 Available platforms: ${Object.keys(PLATFORM_CONFIGS).map(key => PLATFORM_CONFIGS[key].name).join(', ')}`);
  
  // Log contract addresses for debugging
  Object.entries(PLATFORM_CONFIGS).forEach(([key, config]) => {
    const outputCount = config.contractAddresses?.length || 0;
    const inputCount = config.inputAddresses?.length || 0;
    const totalCount = outputCount + inputCount;
    
    if (totalCount > 0) {
      console.log(`🏷️ ${config.name}: ${outputCount} output + ${inputCount} input = ${totalCount} total addresses`);
      
      if (config.contractAddresses?.length > 0) {
        config.contractAddresses.forEach((addr, index) => {
          console.log(`   Output ${index + 1}. ${addr.substring(0, 12)}...`);
        });
      }
      
      if (config.inputAddresses?.length > 0) {
        config.inputAddresses.forEach((addr, index) => {
          console.log(`   Input ${index + 1}. ${addr.substring(0, 12)}...`);
        });
      }
    }
  });
  
  const processedTransactions = transactions.map(tx => 
    processTransactionForOrigins(tx, walletAddress)
  );
  
  // Log summary
  const stats = getOriginStats(processedTransactions);
  const platformCounts = Object.entries(stats)
    .filter(([_, data]) => data.count > 0)
    .map(([platform, data]) => `${platform}: ${data.count}`)
    .join(', ');
  
  console.log('📊 Origin detection summary:', platformCounts || 'No matches found');
  
  // Log detailed breakdown
  Object.entries(stats).forEach(([platform, data]) => {
    if (data.count > 0) {
      console.log(`  ✅ ${PLATFORM_CONFIGS[platform].name}: ${data.count} txs (${data.percentage.toFixed(1)}%), ${data.volume.toFixed(4)} ERG`);
    }
  });
  
  // Log if majority are P2P (might indicate missing contract addresses)
  const p2pPercentage = stats.P2P ? stats.P2P.percentage : 0;
  if (p2pPercentage > 80) {
    console.warn(`⚠️ Warning: ${p2pPercentage.toFixed(1)}% of transactions are P2P. Consider adding more contract/input addresses to platform configs.`);
  }
  
  return processedTransactions;
}

/**
 * Get platform configuration by key
 */
export function getPlatformConfig(platformKey) {
  return PLATFORM_CONFIGS[platformKey] || PLATFORM_CONFIGS.P2P;
}

/**
 * Get top platforms by transaction count
 */
export function getTopPlatforms(transactions, limit = 5) {
  const stats = getOriginStats(transactions);
  
  return Object.entries(stats)
    .filter(([_, data]) => data.count > 0)
    .sort(([_, a], [__, b]) => b.count - a.count)
    .slice(0, limit)
    .map(([platform, data]) => ({
      platform,
      ...data
    }));
}

/**
 * Filter transactions by origin
 */
export function filterTransactionsByOrigin(transactions, origin) {
  if (!Array.isArray(transactions)) return [];
  
  return transactions.filter(tx => tx.origin === origin);
}

/**
 * Get transactions by multiple origins
 */
export function getTransactionsByOrigins(transactions, origins) {
  if (!Array.isArray(transactions) || !Array.isArray(origins)) return [];
  
  return transactions.filter(tx => origins.includes(tx.origin));
}

/**
 * Helper function to add a new platform configuration
 */
export function addPlatformConfig(key, config) {
  if (PLATFORM_CONFIGS[key]) {
    console.warn(`⚠️ Platform ${key} already exists. Use updatePlatformConfig to modify.`);
    return false;
  }
  
  PLATFORM_CONFIGS[key] = {
    name: config.name || key,
    logo: config.logo || `/logos/${key.toLowerCase()}.svg`,
    color: config.color || '#95a5a6',
    website: config.website || null,
    contractAddresses: config.contractAddresses || [],
    inputAddresses: config.inputAddresses || []
  };
  
  const totalAddresses = (config.contractAddresses?.length || 0) + (config.inputAddresses?.length || 0);
  console.log(`✅ Added new platform: ${config.name} with ${totalAddresses} total addresses (${config.contractAddresses?.length || 0} output + ${config.inputAddresses?.length || 0} input)`);
  return true;
}

/**
 * Helper function to add contract addresses to existing platform
 */
export function addContractAddresses(platformKey, addresses, type = 'output') {
  if (!PLATFORM_CONFIGS[platformKey]) {
    console.error(`❌ Platform ${platformKey} not found`);
    return false;
  }
  
  if (!Array.isArray(addresses)) {
    addresses = [addresses];
  }
  
  if (type === 'input') {
    if (!PLATFORM_CONFIGS[platformKey].inputAddresses) {
      PLATFORM_CONFIGS[platformKey].inputAddresses = [];
    }
    const existingCount = PLATFORM_CONFIGS[platformKey].inputAddresses.length;
    PLATFORM_CONFIGS[platformKey].inputAddresses.push(...addresses);
    console.log(`✅ Added ${addresses.length} input addresses to ${PLATFORM_CONFIGS[platformKey].name} (total input: ${PLATFORM_CONFIGS[platformKey].inputAddresses.length})`);
  } else {
    const existingCount = PLATFORM_CONFIGS[platformKey].contractAddresses.length;
    PLATFORM_CONFIGS[platformKey].contractAddresses.push(...addresses);
    console.log(`✅ Added ${addresses.length} output addresses to ${PLATFORM_CONFIGS[platformKey].name} (total output: ${PLATFORM_CONFIGS[platformKey].contractAddresses.length})`);
  }
  
  return true;
}

/**
 * Helper function to add input addresses specifically
 */
export function addInputAddresses(platformKey, addresses) {
  return addContractAddresses(platformKey, addresses, 'input');
}

/**
 * Helper function to get all addresses for a platform (both input and output)
 */
export function getPlatformAddresses(platformKey) {
  const config = PLATFORM_CONFIGS[platformKey];
  if (!config) return { output: [], input: [], total: 0 };
  
  const output = config.contractAddresses || [];
  const input = config.inputAddresses || [];
  
  return {
    output,
    input,
    total: output.length + input.length,
    combined: [...output, ...input]
  };
}

/**
 * Helper function to check if an address belongs to any platform
 */
export function findPlatformByAddress(address, type = 'both') {
  for (const [platformKey, config] of Object.entries(PLATFORM_CONFIGS)) {
    if (platformKey === 'P2P') continue;
    
    if (type === 'output' || type === 'both') {
      if (config.contractAddresses?.includes(address)) {
        return { platform: platformKey, type: 'output', config };
      }
    }
    
    if (type === 'input' || type === 'both') {
      if (config.inputAddresses?.includes(address)) {
        return { platform: platformKey, type: 'input', config };
      }
    }
  }
  
  return null;
}